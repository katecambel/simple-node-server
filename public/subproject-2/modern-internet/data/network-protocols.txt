CIRCUIT & PACKET SWITCHING = When files are sent, it is broken into pieces - called packets - and are then sent separately. There are two ways of sending packets: Circuit and Packet Switching. Circuit Switching - all packets go through the same route hence a hacker could intersect easily. Packet Switching - packets go through different routes, which takes longer but the hacker will have a harder time intersecting. TCP-IP PROCESS = In the TCP-IP process, there are the Transmission Control Protocol Packet (or simply called the TCP Packet), ICMP Ping Packet, UDP Packet and the Router. The IP packages information - such as the adress of the senter, receiver and its type. The LAN - or Local Area Network - connects local networks, computers, etc. There is also a proxy server, which acts as the middleman, for Internet connection and security. For extra security, one could get a firewall, which prevents nasty stuff from the Internet to the Intranet and information to be sent out of the computer. The Internet is a spider web of interconnected networks</em> that consists of routers and switches. COMPARISON OF TRANSPORT PROTOCOLS = The structur of a packet consists of 7 layers (from top to bottom - application, presentation, session, transport, network, data link and physical. Both purposes are to let multiple applications use one network connection simultaneously. User Datagram Protocol (UDP) is lightweight and connectionless. Its advantages are: it has small packet sizes - the UDP header has 8 bytes while the TCP header has 20 bytes; it has no connection to create and maintain; it has more control over when data is sent. It has small transactions hence there is no need to create and close the connection first. However, it has primitive error detection hence it is not that reliable; there is no error recovery and no compensation for lost packets; packets could also arrive out of order; there is no congestion control. Hence the UDP is lightweight but is not that reliable. The Transmission Control Protocol (TCP) is reliable and connection-based. This is where the three-way handshake comes in, wherein, firstly, the first PC establishes or requests for a connection. Then the first PC will send a SYN packet (synchronization request) then the other PC will send an ACK packet (acknowledgement).  The TCP will rearrange the packets if it is out of order. It also has congestion control that delays transmission when the network is congested. There is also no error detection and as mentioned, it also has a bigger header. The data does not always get sent out immediately - which is the side effect of congestion control. Lastly, it has a bigger overhead because of the retransmission of packets and its acknowledgement. In terms of messages and streams, the UDP is message-oriented whereas TCP is stream-oriented. UDP sends data in distinct chucks but the TCP is used as a continuous flow of data. It is split up in chucks by TCP. But it all depends on the application you are building. In terms of text communication, the UDP could have texts mixed up whereas data loss can not be tolerated in TCP. In terms of multimedia streaming, the UDP is less overheard, has delays in sending, and data loss can be masked. However, when TCP is overhead, it does not deteriorate performance and some firewalls block UDP for security reasons. There is a bandwidth that indicates how big your line is to be able to hold data, and is dependent on the physical layer and is given by size. There are also bandwidth-intensive applications that tolerate packet loss. HUB, SWITCH, ROUTER = The hub is cheap and simple, however it wastes bandwidth. It also does not know anything about packets. What it does is that it replicates each incoming bit on all other interfaces. It is the simplest and cheapest way to create a network but there are lots of unnecessary traffic and the security is quite questionable. The switch is relative to the hub. It has mac addresses and the Ethernet and Wi-fi uses it. The router connects the networks altogether. It sends packets within the networks. It performs network address translation, assigns IP addresses to hosts using DHCP and broadcasts the Wi-fi signal. Each device - hub, switch, router - work on a different layer. The hubs are on the physical layer - it is raw data, 0s and 1s. The switches are on the link layer - it is the mac addresses. Lastly, the routers are on the network layer - it is the IP addresses. The hubs are bandwidth wasters and the switches are no longer more expensive The switches are cheaper than a router but can still connect the switch to a router - multiple switches can use the same router. It is quicker than routers for internal communication - less latency at LAN parties, but many routers have an Ethernet switch built in. The router connects networks to one another, often supports NAT and often has a DHCP server to hand out IP addresses. DNS = The DNS is the Domain Name System. It is one of the most important but overlooked parts of the Internet. Computers that make up the Internet are set up in large networks that communicate with each other underground or underwater (in wires) through IP addresses - which are strings of numbers. There is a dot a the end of the domain name: ex. www.google.com. The user is actually looking for the dot at the end, however one does not see nor type this yet this represents the root of the namespace of the Internet. Once you type in the web address, the browser and operating system will check if they know the IP address already, which could be configured in the computer or in memory/cache. If the browser nor the operating system do not recognize the web address, the operating system is configured to ask a resolving name server for IP addresses (or the web address but in numbers) it does not know. The resolving name server (RNS) could be configured manually or automatically. The most important task for RNS to do is to find the root name servers. Operating system queries the resolving name server for the IP address. Whereas the Com name servers are the top-level domain (TLD) name servers. The RNS grabs all the information in the root and locates it in the TLD. If it still does not find it, it goes to the authoritative name server (ANS). The registrar of the TLD and Domain work to together to know which ANS to use. When the domain (such as google.com) is purchased, it notifies the registrar which ANS to use, which then sends the information to the registry, and updates the TLD. The RNS takes the response from the TLD, stores it in cache, and queries the domain name server. Then the ANS, would release the IP address for the browser to locate. The process very complex but it is designed to be fast and efficient.
